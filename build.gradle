buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'eclipse'
    id 'idea'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

apply plugin: 'org.spongepowered.mixin'

group = mod_version
version = mod_group_id

base {
    archivesName = mod_id
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
    mappings channel: mapping_channel, version: mapping_version

    copyIdeResources = true

    runs {
        // applies to all the run configs below
        configureEach {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be added/remove as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'


            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            mods {
                "beyondtheend" {
                    source sourceSets.main
                }
            }
        }

        client {
            property "mixin.env.remapRefMap", "true"

            arg "-mixin.config=beyondtheend.mixins.json"
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        server {
            property 'forge.enabledGameTestNamespaces', mod_id
            property "mixin.env.remapRefMap", "true"

            arg "-mixin.config=beyondtheend.mixins.json"

            args '--nogui'
        }

        // This run config launches GameTestServer and runs all registered gametests, then exits.
        // By default, the server will crash when no gametests are provided.
        // The gametest system is also enabled by default for other run configs under the /test command.
        gameTestServer {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        data {
            // example of overriding the workingDirectory set in configureEach above
            workingDirectory project.file('run-data')

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

mixin {
    add sourceSets.main, "beyondtheend.refmap.json"

    config "beyondtheend.mixins.json"
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url 'https://jitpack.io'
        credentials {
            username 'AstianBK'
            password 'gamas1311'
        }
    }

    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }

}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    implementation fg.deobf('com.github.AstianBK:Beyond_The_End:1.0.0') // Ejemplo: 'com.github.User:ModRepo:v1.0.0'
    implementation fg.deobf("curse.maven:stoneworks-852663:5049592")
    implementation fg.deobf("curse.maven:big-extras-forge-499948:4713352")
    implementation fg.deobf("curse.maven:cataclysmic-combat-880483:5790282")
    implementation fg.deobf("curse.maven:woodworks-543610:4776123")
    implementation fg.deobf("curse.maven:additional-lanterns-501590:5275363")
    implementation fg.deobf("curse.maven:upgrade-aquatic-326895:4777515")
    implementation fg.deobf("curse.maven:experience-obelisk-579484:5733667")
    implementation fg.deobf("curse.maven:occultism-361026:5137571")
    implementation fg.deobf("curse.maven:summoningrituals-671040:4664059")
    implementation fg.deobf("curse.maven:supplementaries-412082:5152602")
    implementation fg.deobf("curse.maven:decorative-blocks-362528:3941638")
    implementation fg.deobf("curse.maven:quark-243121:4812006")
    implementation fg.deobf("curse.maven:extended-slabs-plus-374492:4522949")
    implementation fg.deobf("curse.maven:selene-499980:5567102")
    implementation fg.deobf("curse.maven:blueprint-382216:4749000")
    implementation fg.deobf("curse.maven:smartbrainlib-661293:4458565")
    implementation fg.deobf("curse.maven:curios-309927:5494603")
    implementation fg.deobf("curse.maven:supermartijn642s-core-lib-454372:5668843")
    implementation fg.deobf("curse.maven:puzzles-lib-495476:4600775")
    implementation fg.deobf("curse.maven:autoreglib-250363:4100299")
    implementation fg.deobf("curse.maven:cloth-config-348521:5729096")
    implementation fg.deobf("curse.maven:moving-elevators-373051:5686455")
    implementation fg.deobf("curse.maven:supermartijn642s-config-lib-438332:4715406")
    implementation fg.deobf("curse.maven:moving-elevators-extra-remote-panels-addon-937449:4867548")
    implementation fg.deobf("curse.maven:modonomicon-538392:4675974")
    implementation fg.deobf("curse.maven:kubejs-238086:5408722")
    implementation fg.deobf("curse.maven:rhino-416294:4953345")
    implementation fg.deobf("curse.maven:architectury-api-419699:5137942")
    implementation fg.deobf("curse.maven:endremastered-404183:4046639")
    implementation fg.deobf('software.bernie.geckolib:geckolib-forge-1.19:3.1.40')

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version: forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors: mod_authors, mod_description: mod_description,
    ]

    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }}

// Example for how to get properties into the manifest for reading at runtime.
tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                "Specification-Title": mod_id,
                "Specification-Vendor": mod_authors,
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": project.jar.archiveVersion,
                "Implementation-Vendor": mod_authors,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    // This is the preferred method to reobfuscate your jar file
    finalizedBy 'reobfJar'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
